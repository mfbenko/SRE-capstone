apiVersion: apps/v1
kind: Deployment
metadata:
  name: sre-capstone-deployment
  labels:
    app: sre-capstone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sre-capstone
  template:
    metadata:
      labels:
        app: sre-capstone
    spec:
      containers:
        - name: sre-capstone-mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              cpu: "1"
              memory: "512Mi"
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db

        - name: sre-capstone-prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              cpu: "1"
              memory: "512Mi"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml

        - name: sre-capstone-kafka
          image: apache/kafka:latest
          ports:
            - containerPort: 9092

          env:
          - name: KAFKA_KRAFT_MODE
            value: "true"  # Enable KRaft mode (Zookeeper-less)
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL
            value: "PLAINTEXT"  # Protocol for communication
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://0.0.0.0:9092"  # Kafka listens on all network interfaces
          - name: KAFKA_ADVERTISED_LISTENER
            value: "kafka-service:9092"  # This should match your service name

          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              cpu: "500m"
              memory: "512Mi"

        - name: sre-capstone-grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              cpu: "1"
              memory: "512Mi"
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: mongodb-data
              mountPath: /var/lib/grafana # Mount path for Grafana data (adjust if needed)
            - name: prometheus-config
              mountPath: /etc/prometheus
              subPath: prometheus.yml

      volumes:
        - name: mongodb-data
          emptyDir: {} # Replace with PersistentVolumeClaim for production
        - name: prometheus-config
          configMap:
            name: prometheus-config

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: sre-capstone
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  selector:
    app: sre-capstone
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: ClusterIP
---
# Kafka Service
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: sre-capstone
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
  type: ClusterIP
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: sre-capstone
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
# Prometheus ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
